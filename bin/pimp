#!/bin/bash
# pimp: pimp virtual environment to support setup/teardown
# Copyright (c) 2024 Bluenetics GmbH
# SPDX-License-Identifier: Apache-2.0

#===============================================================================
# pimp -?;  pimp --help   # show usage
#===============================================================================

   if [ "$*" == "-?" ] || [ "$*" == "--help" ] || [ "$*" == "--?" ]; then
      pimp ---g   "pimp virtual environment (version `pimp --version`)"
      pimp ---y   'usage: pimp [-ci?] [--<opt>] [<venv>] [<bin>]'
      echo        '  pimp                       # pimp, consign and install files in virtual environment'
      echo        '  . pimp                     # pimp, consign, install and activate virtual environment'
      echo        '  pimp -c                    # consign files according to .pimp/consign list'
      echo        '  pimp -i                    # install consigned files in virtual environment'
      echo        '  pimp -d                    # consign and deploy binaries to $BIN directory'
      echo        '  pimp @venv                 # pimp @venv to support setup/teardown'
      echo        '  pimp @venv .pimp/bin       # also install binaries of .pimp/bin in @venv'
      echo        '  pimp -?                    # show usage'
      echo        '  pimp --help                # comprehensive help'
      echo        '  pimp --version             # print version'
      if [ "$*" != "-?" ]; then
        pimp ---y "more commands"
        echo      '  . pimp --activate          # locate and activate virtual environment'
        echo      '  . pimp --activate @venv    # activate given virtual environment @venv'
        echo      '  pimp --check @venv         # check if @venv is already pimped'
        echo      '  pimp --consign             # consign binaries and set x-permissions to .pimp/bin'
        echo      '  pimp --install             # install pimp in $BIN directory'
        echo      '  pimp --install pimp <bin>  # install pimp in <bin> directory'
        echo      '  pimp --path <dir>          # examine path of directory in upward hierarchy'
        echo      '  pimp --pimp                # actually pimp'
        echo      '  pimp --venv                # echo name of virtual environment directory'
        echo      '  pimp --copy @venv <bin>    # set x-permissions & copy <bin> files to @venv/bin'
      fi

      return 0 2>/dev/null || exit 0  # safe return/exit
   fi

#===============================================================================
# pimp --version   # print version
#===============================================================================

   if [ "$*" == "--version" ] || [ "$*" == "--v" ]; then
      echo "1.0.0x";
      return 0 2>/dev/null || exit 0  # safe return/exit
   fi

#===============================================================================
# examine whether this script is running in sourced/unsourced mode
# - note: each dispatching clause needs to unset _SOURCED
#===============================================================================

   (return 0 2>/dev/null) && _SOURCED=1 || _SOURCED=0  # determine _SOURCED

#===============================================================================
# pimp --path <dir>   # examine path of directory in upward hierarchy
#===============================================================================

   if [ "$_SOURCED" != 0 ] && [ "$*" == "" ]; then
      bash pimp              # pimp (create/consign/install) virtual environment
      source pimp --activate # activate virtual environment

      unset _SOURCED
      return 0 2>/dev/null || exit 0  # safe return/exit
   fi

#===============================================================================
# . pimp --activate        # locate and activate virtual environment
# . pimp --activate @venv  # activate given virtual environment
#===============================================================================

   if [ "$1" == "--activate" ] && [ "$3" == "" ]; then
      if [ "$_SOURCED" == 0 ]; then
         bash pimp ---r "error: pimp $*" >&2
         echo      "     this command line must be sourced!" >&2
         echo      "     => enter: source pimp --activate" >&2
         unset _SOURCED
         return 1 2>/dev/null || exit 1  # safe return/exit
      fi

      if [ "$2" == "" ]; then
         _VENV=`pimp --venv`
      else
         _VENV=$2
      fi

      if [ ! -d "$_VENV" ]; then
         bash pimp ---r "error: pimp $*" >&2
         echo      "       unable to locate virtual environment" >&2

         unset _VENV
         unset _SOURCED
         return 1 2>/dev/null || exit 1  # safe return/exit
      fi

      source $_VENV/bin/activate

      unset _VENV
      unset _SOURCED
      return 0 2>/dev/null || exit 0  # safe return/exit
   fi

#===============================================================================
#===============================================================================
# after here only non sourced execution is allowed
#===============================================================================
#===============================================================================

    if [ "$_SOURCED" != 0 ]; then
        pimp ---r "bad command line: source pimp $* (or: . pimp $*)"
        echo      "    this command is not allowed to run in sourced mode!"
        unset _SOURCED
        return 1 2>/dev/null || exit 1  # safe return/exit
    fi

#===============================================================================
# pimp --path <dir>   # examine path of directory in upward hierarchy
#===============================================================================

   if [ "$1" == "--path" ] && [ "$3" == "" ]; then
      DIR=`pwd`/$2
      #ec -g "DIR=$DIR"
      if [ -d "$DIR" ]; then
         echo $DIR
         exit 0
      fi

      if [ "`pwd`" == "/" ]; then
         exit 1
      fi

      cd ..
      pimp --path $2 || exit 1
      exit 0
   fi

#===============================================================================
# pimp --consign   # consign binaries and set x-permissions to .pimp/bin
#===============================================================================

   if [ "$*" == "--consign" ]; then
      PIMP=`pimp --path .pimp` || exit 1

      if [ ! -f "$PIMP/consign" ]; then
         pimp ---r "error: pimp $*" >&2
         echo      "       missing consignment file: $PIMP/consign" >&2
         exit 1
      fi

      if [ ! -d "$PIMP/bin" ]; then
         mkdir $PIMP/bin || exit 1
      fi

         # consign files listed in consignment file

      pimp ---g "=== consigning files (=> $PIMP/bin)"

      ROOT=${PIMP%"/.pimp"}
      FILES=`cat $PIMP/consign`

      for FILE in $FILES
      do
         echo "  $FILE -> $PIMP/bin"
         ERR=0
         cp $ROOT/$FILE $PIMP/bin/ || ERR=1
         if [ "$ERR" != "0" ]; then
            pimp ---r "error: pimp $*" >&2
            echo      "       unable to consign file: $FILE" >&2
         fi
      done

      chmod +x $PIMP/bin/*
      exit 0
   fi

#===============================================================================
# pimp --install <pimp> [<bin>]  # install pimp in <bin> or $BIN directory
#===============================================================================

   if [ "$1" == "--install" ] && [ "$2" != "" ] && [ "$4" == "" ]; then
      shift

      if [ "$1" == "" ]; then
         pimp --consign || exit 1
         exit 0
      fi

      if [ "$2" != "" ]; then   # <bin> arg provided!
         BIN=$2
      else
         if [ "$BIN" == "" ]; then
            pimp ---r "error: pimp $*" >&2
            echo      '       environment variable BIN=$BIN' >&2
            echo      '       consider to set something similar to: $ export BIN=~/bin' >&2
            exit 1
         fi
      fi

         # check that $BIN is a directory

      if [ ! -d "$BIN" ]; then
         pimp ---r "error: pimp $*" >&2
         echo      "       no directory: BIN=$BIN" >&2
         exit 1
      fi

         # check that arg1 is a file

      if [ ! -f "$1" ]; then
         pimp ---r "error: pimp $*" >&2
         echo      "       arg1 is not denoting a file: $1" >&2
         exit 1
      fi

         # everything good - install!

      pimp ---g "=== installing $1 in $BIN" >&2
      cp $1 $BIN || exit 1
      chmod +x $BIN/pimp || exit 1
      exit 0
   fi

#===============================================================================
# pimp --pimp   # actually pimp virtual environment
#===============================================================================

   if [ "$*" == "--pimp" ]; then
      ACTIVATE=`pimp --venv`/bin/activate

      if [ ! -f "$ACTIVATE" ]; then
         pimp ---r "error: pimp $*" >&2
         echo      "       no virtual environment directory found (in current directory)" >&2
         exit 1
      fi

      FOUND="1"
      cat $ACTIVATE | grep /bin/setup >/dev/null || FOUND="0"
      if [ $FOUND == "1" ]; then
         pimp ---y "no action: $ACTIVATE is already pimped"
         exit 0
      else
         pimp ---g "=== pimping $ACTIVATE"
         pimp ---pimp-setup $ACTIVATE
         pimp ---pimp-cleanup $ACTIVATE
      fi

      exit 0
   fi

#===============================================================================
# helper: pimp ---pimp-setup <activate>
#===============================================================================

  if [ "$1" == '---pimp-setup' ] && [ "$2" != "" ] && [ "$3" == "" ]; then
    ACTIVATE=$2
    echo '' >>$ACTIVATE
    echo '# custom setup' >>$ACTIVATE
    echo 'if [ -f "$VIRTUAL_ENV/bin/setup" ]; then' >>$ACTIVATE
    echo '  source $VIRTUAL_ENV/bin/setup' >>$ACTIVATE
    echo 'fi' >>$ACTIVATE
    exit 0
  fi

#===============================================================================
# helper: pimp ---pimp-cleanup <activate>
#===============================================================================

if [ "$1" == '---pimp-cleanup' ] && [ "$2" != "" ] && [ "$3" == "" ]; then
  ACTIVATE=$2
  sed '/deactivate ()/  a\

    ' $ACTIVATE > $ACTIVATE.tmp
  sed '/deactivate ()/  a\
fi\
    ' $ACTIVATE.tmp >$ACTIVATE
  sed '/deactivate ()/  a\
    source $VIRTUAL_ENV/bin/cleanup\
    ' $ACTIVATE > $ACTIVATE.tmp
  sed '/deactivate ()/  a\
    if [ -f "$VIRTUAL_ENV/bin/cleanup" ]; then\
    ' $ACTIVATE.tmp > $ACTIVATE
  rm $ACTIVATE.tmp
  exit 0
fi

#===============================================================================
# helper: pimp --venv   # locate virtual environment folder
#===============================================================================

   if [ "$*" == "--venv" ]; then
      FILES=`ls -a`
      for DIR in $FILES
      do
         if [ -d "$DIR" ] && [ "$DIR" != "." ] && [ "$DIR" != ".." ]; then
            if [ -f $DIR/bin/activate ]; then
               echo $DIR
               exit 0
            fi
         fi
      done
      exit 1
   fi

#===============================================================================
# helper: pimp ---r 'text arg'   # internal helper: echo in red color
#         pimp ---g 'text arg'   # internal helper: echo in green color
#         pimp ---y 'text arg'   # internal helper: echo in yellow color
#===============================================================================

   if [ "$1" == "---r" ]; then
      printf "\x1b[31m";  shift;  echo "$*";  printf "\x1b[0m"
      exit 0
   fi

   if [ "$1" == "---g" ]; then
      printf "\x1b[32m";  shift;  echo "$*";  printf "\x1b[0m"
      exit 0
   fi

   if [ "$1" == "---y" ]; then
      printf "\x1b[33m";  shift;  echo "$*";  printf "\x1b[0m"
      exit 0
   fi

#===============================================================================
# pimp   # pimp, consign and install files in virtual environment
#===============================================================================

   if [ "$*" == "" ]; then
      VENV=`pimp --venv`

         # check existence of virtual environment, and occasionally create

      if [ "$VENV" == "" ]; then
         if [ -f .pimp/venv ]; then
            VENV=`cat .pimp/venv`
            pimp ---y "virtual environment not existing!"

            read -p "shall I create virtual environment $VENV [Y/n]?" ANS
				    if [ "$ANS" != "Y" ] && [ "$ANS" != "y" ] && [ "$ANS" != "" ]; then
				       exit 1
				    fi

            if [ "`which python3`" == "" ]; then
               pimp ---r "python3 is not installed"
               echo      '=> please install python3 (versin >= 3.11)'
               exit 1
            fi

            pimp ---g "=== creating virtual environment $VENV ..."
            python3 -m venv $VENV || exit 1

         else
            pimp ---r "error: pimp $*" >&2
            echo      "       virtual environment not existing" >&2
            exit 1
         fi
      fi

         # next we pimp the virtual environment

      pimp --pimp

         # next we consign the binaries

      pimp --consign || exit

         # copy consigned binaries to virtual environment

      pimp ---g "=== copy consigned binaries to virtual environment"
      PIMP=`pimp --path .pimp`

      if [ "$PIMP" == "" ]; then
         pimp ---r "error: unable to locate .pimp directory" >&2
         exit 1
      fi

      if [ -d "$PIMP/bin" ]; then
  	     for FILE in $PIMP/bin/*
	       do
	          echo "  $FILE -> $VENV/bin"
	          cp $FILE $VENV/bin
	       done
      fi

	    pimp ---g "=== pimping complete"
      exit 0
   fi

#===============================================================================
# cannot deal with anything else ...
#===============================================================================

   printf "\x1b[31m";
   echo "bad command line: pimp $*";  printf "\x1b[0m"
   echo '             for help invoke: pimp --help'
   exit 1
