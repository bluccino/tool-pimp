#!/bin/bash
# test-pimp: test pimp tool (run with: $ bash test-pimp)
# Copyright (c) 2024 Bluenetics GmbH
# SPDX-License-Identifier: Apache-2.0

   PIMP=pimp
   TEST="bash test-pimp"

#===============================================================================
# test-install --claim ...   # claim something
#===============================================================================

   if [ "$1" == "--claim" ]; then
      shift
      printf "\x1b[36m"  # cyan
      echo "claim: $*"
      printf "\x1b[0m"
      exit 0
   fi

#===============================================================================
# setup fixture
#===============================================================================

   if [ "$*" == "" ]; then
       if [ "$TESTBUILD" == "" ]; then
          export TESTBUILD=`pwd`/build
       fi

		   rm -rf $TESTBUILD
		   mkdir $TESTBUILD

		   touch $TESTBUILD/tests
		   touch $TESTBUILD/errors

		   mkdir $TESTBUILD/bin

		   bash $PIMP ---y "PIMP=$PIMP"
		   chmod +x $PIMP

       export PATH=`pwd`/../bin:$PATH
   fi

#===============================================================================
# test-install <cmd>      # run command and print result
# test-install -e <cmd>   # check error when run command and print result
#===============================================================================

   if [ "$*" != "" ]; then
      if [ "$1" == '-f' ]; then
         GOOD="1";  OK='-OK';  FAIL='-FAIL'
         shift
      else
         GOOD="0";  OK='+OK';  FAIL='+FAIL'
      fi

      CMD=$*
      #ec -g "CMD=$CMD"

      $CMD 2>/dev/null >/dev/null && ERR=0 || ERR=1
      #$CMD && ERR=0 || ERR=1

      if [ "$ERR" == "$GOOD" ]; then
         echo "$CMD" >>$TESTBUILD/tests
         echo "  $OK: $CMD"
      else
         echo "  *** $CMD" >>$TESTBUILD/errors
         printf "\x1b[31m"  # red
         echo "  $FAIL: $CMD"
         printf "\x1b[0m"
         exit 1
      fi
      exit 0
   fi

#===============================================================================
$TEST --claim available build/bin folder
#===============================================================================

   $TEST ls build/bin

#===============================================================================
$TEST --claim help is working
#===============================================================================

   $TEST $PIMP -?
   $TEST $PIMP --?
   $TEST $PIMP --help

#===============================================================================
$TEST --claim version is supported
#===============================================================================

   $TEST $PIMP --version
   $TEST $PIMP --v

#===============================================================================
$TEST --claim --path option working
#===============================================================================

   $TEST $PIMP --path .git
   $TEST $PIMP --path .pimp

#===============================================================================
$TEST --claim --consign option working
#===============================================================================

   $TEST mkdir build/tmp
   $TEST mv ../.pimp/consign build/tmp/
   $TEST -f $PIMP --consign
   $TEST touch build/tmp/red
   $TEST touch build/tmp/green
   $TEST touch build/tmp/blue
   $TEST rm -f ../.pimp/bin/*
   $TEST eval 'echo test/build/tmp/red >>../.pimp/consign'
   $TEST eval 'echo test/build/tmp/green >>../.pimp/consign'
   $TEST eval 'echo test/build/tmp/blue >>../.pimp/consign'
   $TEST $PIMP --consign
   $TEST cat ../.pimp/bin/red
   $TEST cat ../.pimp/bin/green
   $TEST cat ../.pimp/bin/blue
   $TEST -f cat ../.pimp/bin/yellow
   $TEST rm -f ../.pimp/bin/*
   $TEST mv build/tmp/consign ../.pimp/

#===============================================================================
$TEST --claim testing cases with --install option
#===============================================================================

   $TEST -f bash $PIMP --install
   $TEST -f bash $PIMP --install pimp
   echo '  => unset BIN'; unset BIN
   $TEST -f bash $PIMP --install $PIMP
   echo '  => export BIN=junk/bin';  export BIN=junk/bin
   $TEST -f bash $PIMP --install $PIMP
   echo '  => export BIN=build/bin';  export BIN=build/bin
   $TEST bash $PIMP --install ../bin/$PIMP
   $TEST ls build/bin/pimp  # is pimp installed in build/bin
   $TEST rm -f build/bin/pimp  # remove pimp in build/bin

   $TEST bash $PIMP --install ../bin/$PIMP build/bin
   $TEST ls build/bin/pimp  # is pimp installed in build/bin

   $TEST rm -f build/bin/pimp  # remove pimp in build/bin
   #$TEST bash $PIMP --install

#===============================================================================
# print summary
#===============================================================================

   printf "\x1b[36m"  # cyan
   echo "summary: `cat build/tests | wc -l` tests, `cat build/errors | wc -l` error(s)"
   printf "\x1b[0m"

   printf "\x1b[31m"  # red
   cat build/errors
   printf "\x1b[0m"
   exit 0
